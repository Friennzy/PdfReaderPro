/workspaces/PdfReaderPro/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/DecodingAsyncTask.java:82: Warning: Implicitly using the default locale is a common source of bugs: Use toLowerCase(Locale) instead. For strings meant to be internal use Locale.ROOT, otherwise Locale.getDefault(). [DefaultLocale]
                if (t.getMessage() != null && t.getMessage().toLowerCase().contains("password")) {
                                                             ~~~~~~~~~~~

   Explanation for issues of type "DefaultLocale":
   Calling String#toLowerCase() or #toUpperCase() without specifying an
   explicit locale is a common source of bugs. The reason for that is that
   those methods will use the current locale on the user's device, and even
   though the code appears to work correctly when you are developing the app,
   it will fail in some locales. For example, in the Turkish locale, the
   uppercase replacement for i is not I.

   If you want the methods to just perform ASCII replacement, for example to
   convert an enum name, call String#toUpperCase(Locale.US) instead. If you
   really want to use the current locale, call
   String#toUpperCase(Locale.getDefault()) instead.

   https://developer.android.com/reference/java/util/Locale.html#default_locale

/workspaces/PdfReaderPro/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/link/DefaultLinkHandler.java:51: Warning: Consider adding a <queries> declaration to your manifest when calling this method; see https://g.co/dev/packagevisibility for details [QueryPermissionsNeeded]
        if (intent.resolveActivity(context.getPackageManager()) != null) {
                   ~~~~~~~~~~~~~~~

   Explanation for issues of type "QueryPermissionsNeeded":
   Apps that target Android 11 cannot query or interact with other installed
   apps by default. If you need to query or interact with other installed
   apps, you may need to add a <queries> declaration in your manifest.

   As a corollary, the methods PackageManager#getInstalledPackages and
   PackageManager#getInstalledApplications will no longer return information
   about all installed apps. To query specific apps or types of apps, you can
   use methods like PackageManager#getPackageInfo or
   PackageManager#queryIntentActivities.

   https://g.co/dev/packagevisibility

/workspaces/PdfReaderPro/gradle/libs.versions.toml:14: Warning: A newer version of com.android.application than 8.3.2 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.3.2"
      ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:14: Warning: A newer version of com.android.application than 8.3.2 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.3.2"
      ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:14: Warning: A newer version of com.android.application than 8.3.2 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.3.2"
      ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:14: Warning: A newer version of com.android.library than 8.3.2 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.3.2"
      ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:14: Warning: A newer version of com.android.library than 8.3.2 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.3.2"
      ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:14: Warning: A newer version of com.android.library than 8.3.2 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.3.2"
      ~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

/workspaces/PdfReaderPro/gradle/libs.versions.toml:2: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
constraintlayout = "2.1.4"
                   ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:2: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
constraintlayout = "2.1.4"
                   ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:2: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
constraintlayout = "2.1.4"
                   ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:3: Warning: A newer version of androidx.core:core than 1.13.1 is available: 1.16.0 [GradleDependency]
coreKtx = "1.13.1"
          ~~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:3: Warning: A newer version of androidx.core:core than 1.13.1 is available: 1.16.0 [GradleDependency]
coreKtx = "1.13.1"
          ~~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:3: Warning: A newer version of androidx.core:core than 1.13.1 is available: 1.16.0 [GradleDependency]
coreKtx = "1.13.1"
          ~~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:3: Warning: A newer version of androidx.core:core-ktx than 1.13.1 is available: 1.16.0 [GradleDependency]
coreKtx = "1.13.1"
          ~~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:3: Warning: A newer version of androidx.core:core-ktx than 1.13.1 is available: 1.16.0 [GradleDependency]
coreKtx = "1.13.1"
          ~~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:3: Warning: A newer version of androidx.core:core-ktx than 1.13.1 is available: 1.16.0 [GradleDependency]
coreKtx = "1.13.1"
          ~~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:4: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
appcompat = "1.6.1"
            ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:4: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
appcompat = "1.6.1"
            ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:4: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
appcompat = "1.6.1"
            ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:5: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.6.1 [GradleDependency]
espressoCore = "3.5.1"
               ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:5: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.6.1 [GradleDependency]
espressoCore = "3.5.1"
               ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:5: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.6.1 [GradleDependency]
espressoCore = "3.5.1"
               ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:7: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.2.1 [GradleDependency]
junitVersion = "1.1.5"
               ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:7: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.2.1 [GradleDependency]
junitVersion = "1.1.5"
               ~~~~~~~
/workspaces/PdfReaderPro/gradle/libs.versions.toml:7: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.2.1 [GradleDependency]
junitVersion = "1.1.5"
               ~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/workspaces/PdfReaderPro/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/PDFView.java:486: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

/workspaces/PdfReaderPro/android-pdf-viewer/src/main/res/layout/dialog_password.xml:7: Warning: Missing autofillHints attribute [Autofill]
    <EditText
     ~~~~~~~~

   Explanation for issues of type "Autofill":
   Specify an autofillHints attribute when targeting SDK version 26 or higher
   or explicitly specify that the view is not important for autofill. Your app
   can help an autofill service classify the data correctly by providing the
   meaning of each view that could be autofillable, such as views representing
   usernames, passwords, credit card fields, email addresses, etc.

   The hints can have any value, but it is recommended to use predefined
   values like 'username' for a username or 'creditCardNumber' for a credit
   card number. For a list of all predefined autofill hint constants, see the
   AUTOFILL_HINT_ constants in the View reference at
   https://developer.android.com/reference/android/view/View.html.

   You can mark a view unimportant for autofill by specifying an
   importantForAutofill attribute on that view or a parent view. See
   https://developer.android.com/reference/android/view/View.html#setImportant
   ForAutofill(int).

   https://developer.android.com/guide/topics/text/autofill.html

/workspaces/PdfReaderPro/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/scroll/DefaultScrollHandle.java:203: Warning: Custom view DefaultScrollHandle overrides onTouchEvent but not performClick [ClickableViewAccessibility]
    public boolean onTouchEvent(MotionEvent event) {
                   ~~~~~~~~~~~~
/workspaces/PdfReaderPro/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/DragPinchManager.java:55: Warning: Custom view `PDFView` has setOnTouchListener called on it but does not override performClick [ClickableViewAccessibility]
        pdfView.setOnTouchListener(this);
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/PdfReaderPro/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/DragPinchManager.java:288: Warning: DragPinchManager#onTouch should call View#performClick when a click is detected [ClickableViewAccessibility]
    public boolean onTouch(View v, MotionEvent event) {
                   ~~~~~~~

   Explanation for issues of type "ClickableViewAccessibility":
   If a View that overrides onTouchEvent or uses an OnTouchListener does not
   also implement performClick and call it when clicks are detected, the View
   may not handle accessibility actions properly. Logic handling the click
   actions should ideally be placed in View#performClick as some accessibility
   services invoke performClick when a click action should occur.

/workspaces/PdfReaderPro/android-pdf-viewer/src/main/res/layout/dialog_password.xml:11: Warning: Hardcoded string "Enter password", should use @string resource [HardcodedText]
        android:hint="Enter password"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 32 warnings
